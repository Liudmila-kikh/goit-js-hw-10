{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n\nconst refs = {\n    input: document.querySelector('#datetime-picker'),\n    btn: document.querySelector('.js-startBtn'),\n    days: document.querySelector('[data-days]'),\n    hours: document.querySelector('[data-hours]'),\n    minutes: document.querySelector('[data-minutes]'),\n    seconds: document.querySelector('[data-seconds]'),\n};\n\nlet targetDate = null;\nlet timerId = null;\n\n\nrefs.btn.disabled = true;\n\n\nfunction updateTimer(ms) {\n    const { days, hours, minutes, seconds } = convertMs(ms);\n    refs.days.textContent = pad(days);\n    refs.hours.textContent = pad(hours);\n    refs.minutes.textContent = pad(minutes);\n    refs.seconds.textContent = pad(seconds);\n}\n\n\nfunction startTimer() {\n    refs.btn.disabled = true;\n    refs.input.disabled = true;\n\n    timerId = setInterval(() => {\n        const diff = targetDate - Date.now();\n\n        if (diff <= 0) {\n            clearInterval(timerId);\n            refs.input.disabled = false;\n            updateTimer(0);\n            return;\n        }\n\n        updateTimer(diff);\n    }, 1000);\n}\n\n\nflatpickr(refs.input, {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n        if (selectedDate <= new Date()) {\n            iziToast.show({\n                theme: 'dark',\n                position: 'topRight',\n                iconUrl: 'https://cdn-icons-png.flaticon.com/512/1828/1828843.png',\n                message: 'Please choose a date in the future',\n                messageColor: 'white',\n                color: '#4444ea',\n            });\n            refs.btn.disabled = true;\n        } else {\n            targetDate = selectedDate.getTime();\n            refs.btn.disabled = false;\n        }\n    },\n});\n\n\nrefs.btn.addEventListener('click', startTimer);\n\n\nfunction pad(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    return {\n        days: Math.floor(ms / day),\n        hours: Math.floor((ms % day) / hour),\n        minutes: Math.floor((ms % hour) / minute),\n        seconds: Math.floor((ms % minute) / second),\n    };\n}"],"names":["refs","targetDate","timerId","updateTimer","ms","days","hours","minutes","seconds","convertMs","pad","startTimer","diff","flatpickr","selectedDates","selectedDate","iziToast","value"],"mappings":"+IAMA,MAAMA,EAAO,CACT,MAAO,SAAS,cAAc,kBAAkB,EAChD,IAAK,SAAS,cAAc,cAAc,EAC1C,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEA,IAAIC,EAAa,KACbC,EAAU,KAGdF,EAAK,IAAI,SAAW,GAGpB,SAASG,EAAYC,EAAI,CACrB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtDJ,EAAK,KAAK,YAAcU,EAAIL,CAAI,EAChCL,EAAK,MAAM,YAAcU,EAAIJ,CAAK,EAClCN,EAAK,QAAQ,YAAcU,EAAIH,CAAO,EACtCP,EAAK,QAAQ,YAAcU,EAAIF,CAAO,CAC1C,CAGA,SAASG,GAAa,CAClBX,EAAK,IAAI,SAAW,GACpBA,EAAK,MAAM,SAAW,GAEtBE,EAAU,YAAY,IAAM,CACxB,MAAMU,EAAOX,EAAa,KAAK,IAAG,EAElC,GAAIW,GAAQ,EAAG,CACX,cAAcV,CAAO,EACrBF,EAAK,MAAM,SAAW,GACtBG,EAAY,CAAC,EACb,MACH,CAEDA,EAAYS,CAAI,CACnB,EAAE,GAAI,CACX,CAGAC,EAAUb,EAAK,MAAO,CAClB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQc,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,KAAK,CACV,MAAO,OACP,SAAU,WACV,QAAS,0DACT,QAAS,qCACT,aAAc,QACd,MAAO,SACvB,CAAa,EACDhB,EAAK,IAAI,SAAW,KAEpBC,EAAac,EAAa,UAC1Bf,EAAK,IAAI,SAAW,GAE3B,CACL,CAAC,EAGDA,EAAK,IAAI,iBAAiB,QAASW,CAAU,EAG7C,SAASD,EAAIO,EAAO,CAChB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASR,EAAUL,EAAI,CAMnB,MAAO,CACH,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAOA,EAAK,KAAQ,GAAM,EACxC,QAAS,KAAK,MAAOA,EAAK,IAAU,GAAM,CAClD,CACA"}